{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["renderTimer","mins","secs","minsNum","confineToMax","parseInt","secsNum","dec2binary","num","maxVal","isNaN","number","binary","App","props","state","handleChangeMin","bind","handleChangeSec","event","this","setState","target","value","className","src","logo","alt","class","type","onChange","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAAe,MAA0B,iC,eCuDzC,SAASA,EAAYC,EAAMC,GACzB,IAAIC,EAAUC,EAAaC,SAASJ,GAAO,IACvCK,EAAUF,EAAaC,SAASH,GAAO,IAC3C,OACE,iCAAOK,EAAWJ,GAAlB,IAA6BI,EAAWD,MAI5C,SAASF,EAAaI,EAAKC,GACzB,OAAIC,MAAMF,IAAQA,EAAM,GAAKA,EAAMC,EAC1B,EAEFD,EAGT,SAASD,EAAWI,GAClB,IAAIC,EAAS,GAoCb,OAnCID,GAAU,IACZC,GAAU,IACVD,GAAkB,IAElBC,GAAU,IAERD,GAAU,IACZC,GAAU,IACVD,GAAkB,IAElBC,GAAU,IAERD,GAAU,GACZC,GAAU,IACVD,GAAkB,GAElBC,GAAU,EAERD,GAAU,GACZC,GAAU,IACVD,GAAkB,GAElBC,GAAU,EAERD,GAAU,GACZC,GAAU,IACVD,GAAkB,GAElBC,GAAU,EAGVA,GADED,GAAU,EACF,IAEA,EAKCE,M,kDAzGb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXd,KAAM,IACNC,KAAM,KAER,EAAKc,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,gBAPN,E,mDAUnB,SAAgBE,GACd,IAAIjB,EAAOkB,KAAKL,MAAMb,KACtBkB,KAAKC,SACH,CACEpB,KAAMkB,EAAMG,OAAOC,MACnBrB,KAAMA,M,6BAKZ,SAAgBiB,GACd,IAAIlB,EAAOmB,KAAKL,MAAMd,KACtBmB,KAAKC,SACH,CACEnB,KAAMiB,EAAMG,OAAOC,MACnBtB,KAAMA,M,oBAKZ,WACE,OACE,qBAAKuB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,mBAAGH,UAAU,WAAb,SACGxB,EAAYoB,KAAKL,MAAMd,KAAMmB,KAAKL,MAAMb,QAE3C,sBAAK0B,MAAM,WAAX,UACE,uBAAOC,KAAK,OAAON,MAAOH,KAAKL,MAAMd,KAAM6B,SAAUV,KAAKJ,kBAD5D,IAGE,uBAAOa,KAAK,OAAON,MAAOH,KAAKL,MAAMb,KAAM4B,SAAUV,KAAKF,qBAE5D,kD,GA5CQa,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.78d7cdfe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.2b7a6c31.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\nimport React from 'react';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mins: \"0\",\r\n      secs: \"0\"\r\n    };\r\n    this.handleChangeMin = this.handleChangeMin.bind(this)\r\n    this.handleChangeSec = this.handleChangeSec.bind(this)\r\n  }\r\n\r\n  handleChangeMin(event) {\r\n    var secs = this.state.secs;\r\n    this.setState(\r\n      {\r\n        mins: event.target.value,\r\n        secs: secs\r\n      }\r\n    );\r\n  }\r\n\r\n  handleChangeSec(event) {\r\n    var mins = this.state.mins;\r\n    this.setState(\r\n      {\r\n        secs: event.target.value,\r\n        mins: mins\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <p className=\"App-text\">\r\n            {renderTimer(this.state.mins, this.state.secs)}\r\n          </p>\r\n          <div class=\"App-form\">\r\n            <input type=\"text\" value={this.state.mins} onChange={this.handleChangeMin} />\r\n            :\r\n            <input type=\"text\" value={this.state.secs} onChange={this.handleChangeSec} />\r\n          </div>\r\n          <button>GO!</button>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction renderTimer(mins, secs) {\r\n  var minsNum = confineToMax(parseInt(mins), 60)\r\n  var secsNum = confineToMax(parseInt(secs), 60)\r\n  return (\r\n    <code>{dec2binary(minsNum)}.{dec2binary(secsNum)}</code>\r\n  )\r\n}\r\n\r\nfunction confineToMax(num, maxVal) {\r\n  if (isNaN(num) || num < 0 || num > maxVal) {\r\n    return 0\r\n  }\r\n  return num\r\n}\r\n\r\nfunction dec2binary(number) {\r\n  var binary = \"\";\r\n  if (number >= 32) {\r\n    binary += '1';\r\n    number = number - 32;\r\n  } else {\r\n    binary += '0'\r\n  }\r\n  if (number >= 16) {\r\n    binary += '1';\r\n    number = number - 16;\r\n  } else {\r\n    binary += '0'\r\n  }\r\n  if (number >= 8) {\r\n    binary += '1';\r\n    number = number - 8;\r\n  } else {\r\n    binary += 0\r\n  }\r\n  if (number >= 4) {\r\n    binary += '1';\r\n    number = number - 4;\r\n  } else {\r\n    binary += 0\r\n  }\r\n  if (number >= 2) {\r\n    binary += '1';\r\n    number = number - 2;\r\n  } else {\r\n    binary += 0\r\n  }\r\n  if (number >= 1) {\r\n    binary += '1';\r\n  } else {\r\n    binary += 0\r\n  }\r\n  return binary\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
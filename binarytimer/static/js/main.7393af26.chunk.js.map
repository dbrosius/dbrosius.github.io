{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["BinaryDisplay","totalSecs","minSecs","mins","Math","floor","totalSecs2MinuteSecs","secs","dec2binary","minuteSecs2TotalSecs","number","binary","App","props","state","remainingSecs","timerHandle","button","header","endHandle","isRed","handleUpdate","bind","handleGO","handleSTOP","decrement","handleEnd","blink","event","name","target","this","setState","value","clearInterval","parseInt","setInterval","className","type","onChange","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7393af26.chunk.js","sourcesContent":["import './App.css';\r\nimport React from 'react';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      remainingSecs: 0,\r\n      mins: \"0\",\r\n      secs: \"0\",\r\n      timerHandle: null,\r\n      button: \"PAUSE\",\r\n      header: \"App-header App-orange\",\r\n      endHandle: null,\r\n      isRed: false\r\n    };\r\n    this.handleUpdate = this.handleUpdate.bind(this)\r\n    this.handleGO = this.handleGO.bind(this)\r\n    this.handleSTOP = this.handleSTOP.bind(this)\r\n    this.decrement = this.decrement.bind(this)\r\n    this.handleEnd = this.handleEnd.bind(this)\r\n    this.blink = this.blink.bind(this)\r\n  }\r\n\r\n  handleUpdate(event) {\r\n    const name = event.target.name;\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleGO(event) {\r\n    if (this.state.timerHandle) {\r\n      clearInterval(this.state.timerHandle)\r\n    }\r\n    const mins = parseInt(this.state.mins)\r\n    const secs = parseInt(this.state.secs)\r\n    this.setState({remainingSecs: minuteSecs2TotalSecs(mins, secs)})\r\n    this.setState({timerHandle: setInterval(this.decrement, 1000)})\r\n  }\r\n\r\n  handleSTOP() {\r\n    if (this.state.timerHandle) {\r\n      clearInterval(this.state.timerHandle)\r\n      this.setState({timerHandle: null, button: \"RESUME\"})\r\n    } else {\r\n      this.setState({timerHandle: setInterval(this.decrement, 1000), button: \"PAUSE\"})\r\n    }\r\n    if (this.state.endHandle) {\r\n      clearInterval(this.state.endHandle)\r\n      if (this.state.isRed) {\r\n        this.setState({isRed: false, header: \"App-header App-orange\"})\r\n      }\r\n    }\r\n  }\r\n\r\n  handleEnd() {\r\n    this.blink()\r\n    const endHandle = setInterval(this.blink, 1000)\r\n    this.setState({endHandle: endHandle, button: \"STOP\"})\r\n  }\r\n\r\n  blink() {\r\n    if (this.state.isRed) {\r\n      this.setState({isRed: false, header: \"App-header App-orange\"})\r\n    } else {\r\n      this.setState({isRed: true, header: \"App-header App-red\"})\r\n    }\r\n  }\r\n\r\n  decrement() {\r\n    this.setState({\r\n      remainingSecs: this.state.remainingSecs - 1\r\n    });\r\n    if (this.state.remainingSecs === 0) {\r\n      clearInterval(this.state.timerHandle)\r\n      this.handleEnd()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className={this.state.header} >\r\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\r\n          <p className=\"App-text\">\r\n            {BinaryDisplay(this.state.remainingSecs)}\r\n          </p>\r\n          <p className=\"App-inner\">\r\n            <input className=\"App-form\" type=\"text\" name=\"mins\" value={this.state.mins} onChange={this.handleUpdate}/>\r\n            :\r\n            <input className=\"App-form\" type=\"text\" name=\"secs\" value={this.state.secs} onChange={this.handleUpdate}/>\r\n          </p>\r\n          <p>\r\n            <button className=\"App-button\" onClick={this.handleGO}>GO</button>\r\n            <button className=\"App-button\" onClick={this.handleSTOP}>{this.state.button}</button>\r\n          </p>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction BinaryDisplay(totalSecs) {\r\n  var minSecs = totalSecs2MinuteSecs(totalSecs)\r\n  var mins = minSecs[0]\r\n  var secs = minSecs[1]\r\n  return (\r\n    <code>{dec2binary(mins)}.{dec2binary(secs)}</code>\r\n  );\r\n}\r\n\r\nfunction totalSecs2MinuteSecs(totalSecs) {\r\n  var mins = totalSecs / 60;\r\n  mins = Math.floor(mins);\r\n  var secs = totalSecs % 60;\r\n  return [mins, secs];\r\n}\r\n\r\nfunction minuteSecs2TotalSecs(mins, secs) {\r\n  return (mins * 60) + secs;\r\n}\r\n\r\nfunction dec2binary(number) {\r\n  var binary = \"\";\r\n  if (number >= 32) {\r\n    binary += '1';\r\n    number = number - 32;\r\n  } else {\r\n    binary += '0';\r\n  }\r\n  if (number >= 16) {\r\n    binary += '1';\r\n    number = number - 16;\r\n  } else {\r\n    binary += '0';\r\n  }\r\n  if (number >= 8) {\r\n    binary += '1';\r\n    number = number - 8;\r\n  } else {\r\n    binary += 0;\r\n  }\r\n  if (number >= 4) {\r\n    binary += '1';\r\n    number = number - 4;\r\n  } else {\r\n    binary += 0;\r\n  }\r\n  if (number >= 2) {\r\n    binary += '1';\r\n    number = number - 2;\r\n  } else {\r\n    binary += 0;\r\n  }\r\n  if (number >= 1) {\r\n    binary += '1';\r\n  } else {\r\n    binary += 0;\r\n  }\r\n  return binary;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}